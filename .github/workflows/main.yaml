name: "pre-release"

on:
  push:
    branches:
      - 'main'

jobs:
  doxygen:
    runs-on: ubuntu-20.04
    if: "contains(github.event.head_commit.message, '--build-docs')"
    steps:
    - uses: actions/checkout@v1
    - name: install dependencies
      run: sudo apt install doxygen graphviz
    - name: generate docs
      run: doxygen
    - name: Deploy
      uses: s0/git-publish-subdir-action@master
      env:
        REPO: self
        BRANCH: gh-pages
        FOLDER: doc/html
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ubunut20:
    name: "ubuntu compile and test"
    runs-on: "ubuntu-20.04"
    if: "contains(github.event.head_commit.message, '--build-linux')"
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --yes libsdl2-dev libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev libavresample-dev libavutil-dev libswresample-dev libswscale-dev libpostproc-dev ninja-build

      - uses: BSFishy/meson-build@v1.0.2
        name: build full
        with:
          action: test
          directory: build
          options: --verbose
          meson-version: 0.56.1
      - name: clearing build directory
        run: rm -rf build

  windows:
    name: "windows compile and test"
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v1
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            git
            mingw-w64-x86_64-python3
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-SDL2
            mingw-w64-x86_64-SDL2_image
            mingw-w64-x86_64-SDL2_gfx
            mingw-w64-x86_64-libepoxy
            mingw-w64-x86_64-ffmpeg
            mingw-w64-x86_64-glm
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-gdb
            mingw-w64-x86_64-python
            mingw-w64-x86_64-python-pip

      - name: compile libtrainsim
        shell: msys2 {0}
        run: |
          meson setup -Ddefault_library=static -Db_lto=false build
          meson compile -C build
          meson test -C build

  macos-10:
    name: "macos compile and test"
    runs-on: "macos-10.15"
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: install dependencies
        run: |
          brew install sdl2
          brew install ffmpeg
          brew install sdl2_image
          brew install sdl2_gfx
          brew install python

      - uses: BSFishy/meson-build@v1.0.2
        name: build full
        with:
          action: test
          directory: build
          options: --verbose
          meson-version: 1.0.0
      - name: clearing build directory
        run: rm -rf build

  pre-release:
    name: "Pre Release latest"
    runs-on: "ubuntu-20.04"
    needs: [windows, ubunut20, macos-10]
    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            LICENSE

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: build-artifact-${{ matrix.os }}-${{ matrix.compiler }}
          path: .
