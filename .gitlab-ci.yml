build:debian:
  image: gcc:latest
  stage: build
  script:
    - echo 'echo $K8S_SECRET_GITLAB_TOKEN' > $HOME/.git-askpass && chmod +x $HOME/.git-askpass
    - export GIT_ASKPASS=$HOME/.git-askpass
    - git config --global url."https://api@git.thm.de/".insteadOf "https://git.thm.de/"
    - git config --global url."https://ssh@git.thm.de/".insteadOf "ssh://git@git.thm.de/"
    - git config --global url."https://git@git.thm.de/".insteadOf "git@git.thm.de:"
    - apt-get update
    - apt-get install --yes gfortran-8 build-essential tar curl zip unzip python3-pip
    - update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-8 1
    - apt-get install --yes libopencv-dev
    - python3 -m pip install meson ninja
    - python3 -m pip install glad
    - mkdir build && cd build
    - meson setup ..
    - meson compile
    - meson test
    - cd ..

sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: build
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.login=125d106f4c1c00d7238de9877736613235745f30
  allow_failure: false
  only:
    - merge_requests
    - main
    - develop

pages:debian:
  image: gcc:latest
  stage: deploy
  needs:
    - sonarqube-check
    - build:debian
  script:
  - apt-get update
  - apt-get install --yes doxygen graphviz
  - doxygen
  - mkdir -p public
  - cp -rf doc/html/* public/
  artifacts:
    paths:
    - public
  only:
  - main


